/*
 * missileLauncher.c
 *
 *  Created on: Dec 10, 2015
 *      Author: student
 */
#include "missilleLauncher.h"

int testSendData(void) {
	usb_dev_handle *dev_handle; //a device handle
	libusb_context *ctx = NULL; //a libusb session
	dev_handle = libusb_open_device_with_vid_pid(ctx, 5118, 7424); //these are vendorID and productID I found for my usb device
	if (dev_handle == NULL)

		cout << "Cannot open device" << endl;
	else
		cout << "Device Opened" << endl;
	libusb_free_device_list(devs, 1); //free the list, unref the devices in it

	unsigned char *data = new
	unsigned char[4]; //data to write
	data[0] = 'a';
	data[1] = 'b';
	data[2] = 'c';
	data[3] = 'd'; //some dummy values

	int actual; //used to find out how many bytes were written
	if (libusb_kernel_driver_active(dev_handle, 0) == 1) { //find out if kernel driver is attached
		cout << "Kernel Driver Active" << endl;
		if (libusb_detach_kernel_driver(dev_handle, 0) == 0) //detach it
			cout << "Kernel Driver Detached!" << endl;
	}
	r = libusb_claim_interface(dev_handle, 0); //claim interface 0 (the first) of device (mine had jsut 1)
	if (r < 0) {
		cout << "Cannot Claim Interface" << endl;
		return 1;
	}
	cout << "Claimed Interface" << endl;

	cout << "Data->" << data << "<-" << endl; //just to see the data we want to write : abcd
	cout << "Writing Data..." << endl;
	r = libusb_bulk_transfer(dev_handle, (2 | LIBUSB_ENDPOINT_OUT), data, 4,
			&actual, 0); //my device's out endpoint was 2, found with trial- the device had 2 endpoints: 2 and 129
	if (r == 0 && actual == 4) //we wrote the 4 bytes successfully
		cout << "Writing Successful!" << endl;
	else
		cout << "Write Error" << endl;

	r = libusb_release_interface(dev_handle, 0); //release the claimed interface
	if (r != 0) {
		cout << "Cannot Release Interface" << endl;
		return 1;
	}
	cout << "Released Interface" << endl;

	libusb_close(dev_handle); //close the device we opened
	libusb_exit(ctx); //needs to be called to end the

	delete[] data; //delete the allocated memory for data
	return 0;
}
int main(void) {
	testSendData();
	discoverUSB();
	return 0;
}
